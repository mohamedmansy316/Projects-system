1704231411
waR3U4bTeM%3A47ebe7f479900e2102c77dbf2e9e7c5b-7e0d4abe724fba1c8e0150041c994b4b
s:3392:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjdlMGQ0YWJlNzI0ZmJhMWM4ZTAxNTAwNDFjOTk0YjRiIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6NDg6IjIwMTZfMDZfMDFfMDAwMDA0X2NyZWF0ZV9vYXV0aF9jbGllbnRzX3RhYmxlLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjkyOiJ2ZW5kb3IvbGFyYXZlbC9wYXNzcG9ydC9kYXRhYmFzZS9taWdyYXRpb25zLzIwMTZfMDZfMDFfMDAwMDA0X2NyZWF0ZV9vYXV0aF9jbGllbnRzX3RhYmxlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTUzNToiPD9waHAKCnVzZSBJbGx1bWluYXRlXERhdGFiYXNlXE1pZ3JhdGlvbnNcTWlncmF0aW9uOwp1c2UgSWxsdW1pbmF0ZVxEYXRhYmFzZVxTY2hlbWFcQmx1ZXByaW50Owp1c2UgSWxsdW1pbmF0ZVxTdXBwb3J0XEZhY2FkZXNcU2NoZW1hOwoKcmV0dXJuIG5ldyBjbGFzcyBleHRlbmRzIE1pZ3JhdGlvbgp7CiAgICAvKioKICAgICAqIFRoZSBkYXRhYmFzZSBzY2hlbWEuCiAgICAgKgogICAgICogQHZhciBcSWxsdW1pbmF0ZVxEYXRhYmFzZVxTY2hlbWFcQnVpbGRlcgogICAgICovCiAgICBwcm90ZWN0ZWQgJHNjaGVtYTsKCiAgICAvKioKICAgICAqIENyZWF0ZSBhIG5ldyBtaWdyYXRpb24gaW5zdGFuY2UuCiAgICAgKgogICAgICogQHJldHVybiB2b2lkCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpCiAgICB7CiAgICAgICAgJHRoaXMtPnNjaGVtYSA9IFNjaGVtYTo6Y29ubmVjdGlvbigkdGhpcy0+Z2V0Q29ubmVjdGlvbigpKTsKICAgIH0KCiAgICAvKioKICAgICAqIEdldCB0aGUgbWlncmF0aW9uIGNvbm5lY3Rpb24gbmFtZS4KICAgICAqCiAgICAgKiBAcmV0dXJuIHN0cmluZ3xudWxsCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRDb25uZWN0aW9uKCkKICAgIHsKICAgICAgICByZXR1cm4gY29uZmlnKCdwYXNzcG9ydC5zdG9yYWdlLmRhdGFiYXNlLmNvbm5lY3Rpb24nKTsKICAgIH0KCiAgICAvKioKICAgICAqIFJ1biB0aGUgbWlncmF0aW9ucy4KICAgICAqCiAgICAgKiBAcmV0dXJuIHZvaWQKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHVwKCkKICAgIHsKICAgICAgICAkdGhpcy0+c2NoZW1hLT5jcmVhdGUoJ29hdXRoX2NsaWVudHMnLCBmdW5jdGlvbiAoQmx1ZXByaW50ICR0YWJsZSkgewogICAgICAgICAgICAkdGFibGUtPmJpZ0luY3JlbWVudHMoJ2lkJyk7CiAgICAgICAgICAgICR0YWJsZS0+dW5zaWduZWRCaWdJbnRlZ2VyKCd1c2VyX2lkJyktPm51bGxhYmxlKCktPmluZGV4KCk7CiAgICAgICAgICAgICR0YWJsZS0+c3RyaW5nKCduYW1lJyk7CiAgICAgICAgICAgICR0YWJsZS0+c3RyaW5nKCdzZWNyZXQnLCAxMDApLT5udWxsYWJsZSgpOwogICAgICAgICAgICAkdGFibGUtPnN0cmluZygncHJvdmlkZXInKS0+bnVsbGFibGUoKTsKICAgICAgICAgICAgJHRhYmxlLT50ZXh0KCdyZWRpcmVjdCcpOwogICAgICAgICAgICAkdGFibGUtPmJvb2xlYW4oJ3BlcnNvbmFsX2FjY2Vzc19jbGllbnQnKTsKICAgICAgICAgICAgJHRhYmxlLT5ib29sZWFuKCdwYXNzd29yZF9jbGllbnQnKTsKICAgICAgICAgICAgJHRhYmxlLT5ib29sZWFuKCdyZXZva2VkJyk7CiAgICAgICAgICAgICR0YWJsZS0+dGltZXN0YW1wcygpOwogICAgICAgIH0pOwogICAgfQoKICAgIC8qKgogICAgICogUmV2ZXJzZSB0aGUgbWlncmF0aW9ucy4KICAgICAqCiAgICAgKiBAcmV0dXJuIHZvaWQKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGRvd24oKQogICAgewogICAgICAgICR0aGlzLT5zY2hlbWEtPmRyb3BJZkV4aXN0cygnb2F1dGhfY2xpZW50cycpOwogICAgfQp9OwoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";